{{ if .Values.tsmAgent.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsm-agent
spec:
  replicas: {{ .Values.tsmAgent.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: tsm-agent
  template:
    metadata:
      labels:
       app.kubernetes.io/name: tsm-agent
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: tsm-agent
      imagePullSecrets:
        - name: isstech-repository-auth

      containers:
        - name: tsm-agent
          image: {{ .Values.tsmAgent.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 50051
          command:
            - "/bin/bash"
          args:
            - "-c"
            - |
              mkdir /app/data/cert
              cp /mnt/certs/tls.key /app/data/cert/tsm-agent.key && \
              cp /mnt/certs/tls.crt /app/data/cert/tsm-agent.crt && \
              cp /mnt/issassist-ca.crt /app/data/cert/issassist-ca.crt && \
              cp /mnt/messaging-certs/tls.key /app/data/messaging.key && \
              cp /mnt/messaging-certs/tls.crt /app/data/messaging.crt && \
              chown -R tsm_agent:tsm_agent /app/data/cert && \
              chown tsm_agent:tsm_agent /app/data/messaging.key && \
              chmod 755 -R /app/data/cert && \
              chmod 600 /app/data/cert/tsm-agent.key && \
              chmod 600 /app/data/messaging.key && \
              /entrypoint.sh
          livenessProbe:
            grpc:
              port: 50051
            initialDelaySeconds: 30
            timeoutSeconds: 60
          env:
            - name: IA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tsm-agent-postgres-auth
                  key: "password"
            - name: IA_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tsm-agent-valkey-auth
                  key: "password"
          volumeMounts:
            - name: tsm-agent-config
              mountPath: "/app/data/config.toml"
              subPath: "config.toml"
            - name: tsm-agent
              mountPath: "/app/data/uploads"
            - name: tsm-agent-cert
              mountPath: "/mnt/certs"
            - name: issassist-ca-cert
              mountPath: "/mnt/issassist-ca.crt"
              subPath: "tls.crt"
            - name: messaging
              mountPath: "/mnt/messaging-certs"
      volumes:
        - name: tsm-agent
          persistentVolumeClaim:
            claimName: tsm-agent
        - name: tsm-agent-config
          configMap:
            name: tsm-agent-config
        - name: tsm-agent-cert
          secret:
            secretName: tsm-agent-cert
        - name: issassist-ca-cert
          secret:
            secretName: issassist-ca-cert
        - name: tsm-agent-postgres-auth
          secret:
            secretName: tsm-agent-postgres-auth
        - name: tsm-agent-valkey-auth
          secret:
            secretName: tsm-agent-valkey-auth
        - name: messaging
          secret:
            secretName: messaging-cert
{{ end }}
