{{ if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: api
  template:
    metadata:
      labels:
       app.kubernetes.io/name: api
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      imagePullSecrets:
        - name: isstech-repository-auth

      containers:
        - name: api
          image: {{ .Values.api.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          command:
            - "/bin/bash"
          args:
            - "-c"
            - |
              mkdir /app/data/cert
              cp /mnt/certs/tls.key /app/data/cert/api.key && \
              cp /mnt/certs/tls.crt /app/data/cert/api.crt && \
              cp /mnt/issassist-ca.crt /app/data/cert/issassist-ca.crt && \
              chown -R issassist:issassist /app/data/cert && \
              chmod 755 -R /app/data/cert && \
              chmod 600 /app/data/cert/api.key && \
              /entrypoint.sh
          livenessProbe:
            httpGet:
              port: 8000
              path: /api/v1/info/
            initialDelaySeconds: 30
            timeoutSeconds: 60
          env:
            - name: IA_ROOT_PATH
              value: "/api"
            - name: IA_FORWARDED_ALLOW_IPS
              value: "*"
            - name: IA_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: api-postgres-auth
                  key: "username"
            - name: IA_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-postgres-auth
                  key: "password"
            - name: IA_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: api-valkey-auth
                  key: "username"
            - name: IA_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-valkey-auth
                  key: "password"
            - name: IA_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: admin-auth
                  key: "username"
            - name: IA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin-auth
                  key: "password"
            - name: IA_JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: api-jwt-secret-key
                  key: "jwt-secret-key"
            {{if .Values.api.mail.smtpHost }}
            - name: IA_SMTP_HOST
              value: {{ .Values.api.mail.smtpHost | quote }}
            {{end}}
            {{if .Values.api.mail.smtpPort }}
            - name: IA_SMTP_PORT
              value: {{ .Values.api.mail.smtpPort | quote }}
            {{end}}
            {{if .Values.api.mail.smtpTLS }}
            - name: IA_SMTP_TLS
              value: {{ .Values.api.mail.smtpTLS | quote }}
            {{end}}
            {{if .Values.api.mail.fromEmailAddress }}
            - name: IA_MAIL_FROM_EMAIL_ADDRESS
              value: {{ .Values.api.mail.fromEmailAddress | quote }}
            {{end}}
            {{if .Values.api.mail.fromName }}
            - name: IA_MAIL_FROM_NAME
              value: {{ .Values.api.mail.fromName | quote }}
            {{end}}
            - name: IA_SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: smtp-auth
                  key: "username"
            - name: IA_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smtp-auth
                  key: "password"
          volumeMounts:
            - name: api-config
              mountPath: "/app/data/config.toml"
              subPath: "config.toml"
            - name: api-cert
              mountPath: "/mnt/certs"
            - name: issassist-ca-cert
              mountPath: "/mnt/issassist-ca.crt"
              subPath: "tls.crt"
      volumes:
        - name: api-config
          configMap:
            name: api-config
        - name: api-cert
          secret:
            secretName: api-cert
        - name: issassist-ca-cert
          secret:
            secretName: issassist-ca-cert
        - name: api-postgres-auth
          secret:
            secretName: api-postgres-auth
        - name: api-valkey-auth
          secret:
            secretName: api-valkey-auth
        - name: admin-auth
          secret:
            secretName: admin-auth
        - name: api-jwt-secret-key
          secret:
            secretName: api-jwt-secret-key
        - name: smtp-auth
          secret:
            secretName: smtp-auth
{{ end }}
