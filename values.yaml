global:
  publicDomainName: "localhost"
  publicPort: 443
  # Base path of IssAssist.
  # Should NOT end with "/".
  # Examples: "", "/issassist", "/issassist/demo"
  basePath: ""

  # The main administrative account
  adminAccount:
    username: admin
    # This must be a valid email address.
    email: user@isstech.io
    # The timezone of the admin account.
    # Warning: This option only works on IssAssist, and not PgAdmin or other
    # side-tools.
    timezone: "Europe/Stockholm"
    # Whether to lock the password of the admin account such that it cannot
    # be changed. This option will reset the admin password to the one defined
    # in the Kubernetes secret `admin-auth` if it's different.
    #
    # Note: If you have changed your password, and lost the new one,
    # set this option to true to reset the password to the value of
    # `admin-auth.password`.
    #
    # Warning: This only works on IssAssist, and not PgAdmin or other
    # side-tools.
    lockPassword: false

  # Lifetimes of internal certificates
  certDuration: 8760h  # 1 year
  caCertDuration: 87600h  # 10 years

  # Priority class of IssAssist components.
  priorityClass: ~

  # Ingress
  ingress:
    ingressClass: nginx

    # TLS certificate settings
    tls:
      # Issuer type. Can be:
      # - cluster (uses cert-manager.io/cluster-issuer annotation)
      # - issuer (uses cert-manager.io/issuer annotation)
      # - disabled (disables public certificate usage and use a built-in
      #             self-signed certificate instead)
      issuerType: "disabled"
      # Issuer or ClusterIssuer name.
      issuer: ""

api:
  enabled: true
  image: 'ghcr.io/isstech/issassist-api:1.0'

  mail:
    smtpHost: ""
    smtpPort: 25
    smtpTLS: true
    smtpUsername: ""
    smtpPassword: ""
    fromEmailAddress: ""
    fromName: ""

  postgres:
    storageClass: ~
    volumeSize: "10Gi"

  valkey:
    storageClass: ~
    volumeSize: "1Gi"

webGUI:
  enabled: true
  replicas: 3
  image: 'ghcr.io/isstech/issassist-webgui:1.0'

tsmAgent:
  enabled: true
  replicas: 3
  image: 'ghcr.io/isstech/issassist-tsm-agent:1.0'

  tsmClientImage:
    buildSchedule: "0 0 * * 1"  # Every Monday, 00:00

  restoreTests:
    # Storage class for restore test volumes.
    # Recommendation: prioritize capacity over random I/O performance.
    storageClass: ~
    # Priority class of the restore test pods.
    # This should be less than any default priority class of the cluster, and
    # less than `global.priorityClass`.
    priorityClass: ~
    # Metadata volume settings. This volume is used to store metadata
    # (not restored files) during restore testing.
    metadataVolume:
      # Note: Suffixing with "B" here is obligatory.
      size: "1GiB"
    # Restore volume settings. This volume holds restored inodes as well as
    # some metadata during restore testing.
    restoreVolume:
      # The restore volume is used to store restored inodes as well as some
      # metadata (not restored files) during restore testing.
      # The size of the volume is defined using the formula:
      # `constant + dsmc_reported_size + (file_count * EFS) +
      # (dir_count * EDS).
      # EFS := "Extra File Size" and EDS := "Extra Directory Size".
      # Note: Suffixing with "B" here is obligatory.
      sizeConstant: "1GiB"
      extraFileSize: "4KiB"
      extraDirectorySize: "4KiB"

  postgres:
    storageClass: ~
    volumeSize: "20Gi"

  valkey:
    storageClass: ~
    volumeSize: "1Gi"

# PgAdmin is a tool used to access the PostgreSQL databases in IssAssist
# directly. It is hosted under /pgadmin if enabled.
pgAdmin:
  enabled: false

  ingress:
    enabled: true
    annotations: { }

imageCredentials:
  registry: "ghcr.io"
  username: "your_github_username"
  password: "your_pat_token"


##################
## Dependencies ##
##################

kubernetes-secret-generator:
  installCRDs: true
  global:
    imageRegistry:
    imagePullSecrets:

  image:
    registry: quay.io
    repository: mittwald/kubernetes-secret-generator
    # if no tag is given, the chart's appVersion is used
    tag: "v3.4.1"
    pullPolicy: Always
    pullSecrets: [ ]

  args: [ ]

  nameOverride: ""
  fullnameOverride: "secret-generator"
  deploymentStrategy: "Recreate"

  automountServiceAccountToken:

  serviceAccount:
    automountServiceAccountToken:
    # Specifies whether a service account should be created
    create: true
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:

  podSecurityContext:
    { }
  # fsGroup: 2000

  priorityClassName: ""

  securityContext:
    { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources:
     limits:
       cpu: 100m
       memory: 128Mi
     requests:
       cpu: 100m
       memory: 128Mi

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

  # Regenerate secrets that have been generated by an old version of kubernetes-secret-generator and
  # are not cryptographically secure
  regenerateInsecure: "true"

  # Length of the generated secrets
  secretLength: 40

  # Namespace that are watched for secret generation
  # Accepts a comma-separated list of namespaces: ns1,ns2
  # If set to "", all namespaces will be watched
  # Accessing secrets in namespaces other than the deployed one requires permissions via a cluster role (on by default)
  watchNamespace: ""

  useMetricsService: false

  volumeMounts: [ ]

  volumes: [ ]

  # RBAC parameteres
  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/
  rbac:
    # Disables creation of rbac resources
    create: true
    # The cluster role allows access to all namespaces in the cluster.
    # Set to false to restrict access to the deployed namespace only.
    # ClusterRole is deployed by Default
    clusterRole: true

  livenessProbe:
    enabled: true
    initialDelaySeconds: 6
    periodSeconds: 3
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  readinessProbe:
    enabled: true
    initialDelaySeconds: 6
    periodSeconds: 3
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
